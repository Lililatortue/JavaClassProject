










-- PROCEDURE
CREATE OR REPLACE view view_Full_Transaction as(
    SELECT
        tc.CPT_NUMERO,
        tc.CPT_TYPE,
        tt.TRX_ID,
        tt.TRX_MONTANT,
        tt.TRX_DATE,
        tt.TRX_TYPE
    FROM
        tc T_COMPTE 
    JOIN   tt T_TRANSACTION ON tt.CPT_NUMERO = tc.CPT_NUMERO
)







---------------------------------------TABLE VIREMENT------------------------------------
CREATE TABLE T_VIREMENT(

)

-- TABLE DES DEMANDES CLIENTS
CREATE TABLE T_DEMANDE_CLIENT (
    DMD_ID              INT CONSTRAINT DMD_ID_PK PRIMARY KEY,
    CLI_ID              INT CONSTRAINT DMD_CLI_ID_NN NOT NULL,
    DMD_TYPE            VARCHAR2(20) CONSTRAINT DMD_TYPE_NN NOT NULL,
    DMD_TYPE_CPT        VARCHAR2(20),
    DMD_CPT_CIBLE       VARCHAR2(20),
    DMD_CPT_TYPE_CIBLE  VARCHAR2(20),
    DMD_DATE            DATE CONSTRAINT DMD_DATE_NN NOT NULL,
    GEST_ID             INT,
    CONSTRAINT DMD_CLI_ID_FK FOREIGN KEY(CLI_ID) REFERENCES T_CLIENT(CLI_ID),
    CONSTRAINT DMD_GEST_ID_FK FOREIGN KEY(GEST_ID) REFERENCES T_GESTIONNAIRE(GEST_ID),
    CONSTRAINT DMD_CPT_CIBLE_FK FOREIGN KEY(DMD_CPT_CIBLE, DMD_CPT_TYPE_CIBLE) REFERENCES T_COMPTE(CPT_NUMERO, CPT_TYPE)
);


CREATE SEQUENCE SEQ_DEMANDE_ID START WITH 1 INCREMENT BY 1;


-- TRIGGERS
-- Remplit automatiquement TRX_ID lors d'une nouvelle transaction
CREATE OR REPLACE TRIGGER TRG_BI_TRANSACTION
BEFORE INSERT ON T_TRANSACTION
FOR EACH ROW
BEGIN
    SELECT SEQ_TRANSACTION_ID.NEXTVAL INTO :NEW.TRX_ID FROM dual;
END;


--Remplit automatiquement DMD_ID lors d'une nouvelle demande
CREATE OR REPLACE TRIGGER TRG_BI_DEMANDE
BEFORE INSERT ON T_DEMANDE_CLIENT
FOR EACH ROW
BEGIN
    SELECT SEQ_DEMANDE_ID.NEXTVAL INTO :NEW.DMD_ID FROM dual;
END;



-- VUES



-- Affiche les transactions avec type de compte
CREATE OR REPLACE VIEW V_TRANSACTIONS_DETAILLEES AS
SELECT T.TRX_ID, T.TRX_MONTANT, T.TRX_TYPE, T.TRX_DATE,
       T.TRX_SRC_NUM, T.TRX_DEST_NUM, 
       CS.CPT_TYPE AS TYPE_SOURCE, CD.CPT_TYPE AS TYPE_DESTINATION
FROM T_TRANSACTION T
LEFT JOIN T_COMPTE CS ON T.TRX_SRC_NUM = CS.CPT_NUMERO AND T.TRX_SRC_TYPE = CS.CPT_TYPE
LEFT JOIN T_COMPTE CD ON T.TRX_DEST_NUM = CD.CPT_NUMERO AND T.TRX_DEST_TYPE = CD.CPT_TYPE;


-- Affiche les demandes clients non traitees
CREATE OR REPLACE VIEW V_DEMANDES_NON_TRAITEES AS
SELECT D.DMD_ID, D.CLI_ID, U.USR_NOM AS CLI_NOM, U.USR_PRENOM AS CLI_PRENOM,
       D.DMD_TYPE, D.DMD_TYPE_CPT, D.DMD_CPT_CIBLE, D.DMD_DATE
FROM T_DEMANDE_CLIENT D
JOIN T_CLIENT C ON D.CLI_ID = C.CLI_ID
JOIN T_USER U ON C.USR_ID = U.USR_ID
WHERE D.GEST_ID IS NULL;


--------------------------DML pour transaction--------------------------------

-- T_TRANSACTION
INSERT INTO T_TRANSACTION (TRX_ID, TRX_MONTANT, TRX_TYPE, TRX_DATE, TRX_SRC_NUM, TRX_SRC_TYPE, TRX_DEST_NUM, TRX_DEST_TYPE)
VALUES (SEQ_TRANSACTION_ID.NEXTVAL, 200.00, 'VIREMENT', SYSDATE, 'CHQ-001', 'CHEQUE', 'CHQ-002', 'CHEQUE');

INSERT INTO T_TRANSACTION (TRX_ID, TRX_MONTANT, TRX_TYPE, TRX_DATE, TRX_SRC_NUM, TRX_SRC_TYPE, TRX_DEST_NUM, TRX_DEST_TYPE)
VALUES (SEQ_TRANSACTION_ID.NEXTVAL, 300.00, 'DEPOT', SYSDATE, NULL, NULL, 'EPR-001', 'EPARGNE');

INSERT INTO T_TRANSACTION (TRX_ID, TRX_MONTANT, TRX_TYPE, TRX_DATE, TRX_SRC_NUM, TRX_SRC_TYPE, TRX_DEST_NUM, TRX_DEST_TYPE)
VALUES (SEQ_TRANSACTION_ID.NEXTVAL, 150.00, 'RETRAIT', SYSDATE, 'CHQ-001', 'CHEQUE', NULL, NULL);

INSERT INTO T_TRANSACTION (TRX_ID, TRX_MONTANT, TRX_TYPE, TRX_DATE, TRX_SRC_NUM, TRX_SRC_TYPE, TRX_DEST_NUM, TRX_DEST_TYPE)
VALUES (SEQ_TRANSACTION_ID.NEXTVAL, 500.00, 'VIREMENT', SYSDATE, 'CHQ-002', 'CHEQUE', 'CRD-002', 'CREDIT');




-- T_DEMANDE_CLIENT

-- Ajout de compte
INSERT INTO T_DEMANDE_CLIENT (DMD_ID, CLI_ID, DMD_TYPE, DMD_TYPE_CPT, DMD_DATE, GEST_ID)
VALUES (SEQ_DEMANDE_ID.NEXTVAL, 1, 'AJOUT', 'DEVISE', SYSDATE, NULL);

-- Fermeture compte
INSERT INTO T_DEMANDE_CLIENT (DMD_ID, CLI_ID, DMD_TYPE, DMD_CPT_CIBLE, DMD_CPT_TYPE_CIBLE, DMD_DATE, GEST_ID)
VALUES (SEQ_DEMANDE_ID.NEXTVAL, 1, 'FERMETURE', 'EPR-001', 'EPARGNE', SYSDATE, NULL);

-- Fermeture totale
INSERT INTO T_DEMANDE_CLIENT (DMD_ID, CLI_ID, DMD_TYPE, DMD_DATE, GEST_ID)
VALUES (SEQ_DEMANDE_ID.NEXTVAL, 2, 'FERMETURE_TOTALE', SYSDATE, NULL);

-- Ajout avec gestionnaire affecte
INSERT INTO T_DEMANDE_CLIENT (DMD_ID, CLI_ID, DMD_TYPE, DMD_TYPE_CPT, DMD_DATE, GEST_ID)
VALUES (SEQ_DEMANDE_ID.NEXTVAL, 2, 'AJOUT', 'CREDIT', SYSDATE, 1);


